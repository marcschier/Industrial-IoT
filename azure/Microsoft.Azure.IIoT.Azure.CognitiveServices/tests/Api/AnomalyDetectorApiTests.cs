/* 
 * Anomaly Detector Cognitive Service API
 *
 * The Anomaly Detector Service detects anomalies automatically in time series data. It supports two functionalities, one is for detecting the whole series with model trained by the time series, another is detecting last point with model trained by points before. By using this service, developers can discover incidents and establish a logic flow for root cause analysis.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AnomalyDetectorApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AnomalyDetectorApiTests
    {
        private AnomalyDetectorApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AnomalyDetectorApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AnomalyDetectorApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AnomalyDetectorApi
            //Assert.IsInstanceOfType(typeof(AnomalyDetectorApi), instance, "instance is a AnomalyDetectorApi");
        }

        
        /// <summary>
        /// Test AnomalydetectorV10TimeseriesChangepointDetectPost
        /// </summary>
        [Test]
        public void AnomalydetectorV10TimeseriesChangepointDetectPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangePointDetectRequest body = null;
            //var response = instance.AnomalydetectorV10TimeseriesChangepointDetectPost(body);
            //Assert.IsInstanceOf<ChangePointDetectResponse> (response, "response is ChangePointDetectResponse");
        }
        
        /// <summary>
        /// Test AnomalydetectorV10TimeseriesEntireDetectPost
        /// </summary>
        [Test]
        public void AnomalydetectorV10TimeseriesEntireDetectPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AnomalyDetectRequest body = null;
            //var response = instance.AnomalydetectorV10TimeseriesEntireDetectPost(body);
            //Assert.IsInstanceOf<EntireDetectResponse> (response, "response is EntireDetectResponse");
        }
        
        /// <summary>
        /// Test AnomalydetectorV10TimeseriesLastDetectPost
        /// </summary>
        [Test]
        public void AnomalydetectorV10TimeseriesLastDetectPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AnomalyDetectRequest body = null;
            //var response = instance.AnomalydetectorV10TimeseriesLastDetectPost(body);
            //Assert.IsInstanceOf<LastDetectResponse> (response, "response is LastDetectResponse");
        }
        
    }

}
