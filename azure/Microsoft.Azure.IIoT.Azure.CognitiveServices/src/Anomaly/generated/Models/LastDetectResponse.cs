// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary/>
    public partial class LastDetectResponse
    {
        /// <summary>
        /// Initializes a new instance of the LastDetectResponse class.
        /// </summary>
        public LastDetectResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LastDetectResponse class.
        /// </summary>
        /// <param name="period">Gets or sets frequency extracted from the
        /// series, zero means no
        /// recurrent pattern has been found.</param>
        /// <param name="suggestedWindow">Gets or sets suggested input series
        /// points needed for detecting the
        /// latest point.</param>
        /// <param name="expectedValue">Gets or sets expected value of the
        /// latest point.</param>
        /// <param name="upperMargin">Gets or sets upper margin of the latest
        /// point. UpperMargin is used
        /// to calculate upperBoundary, which equals to expectedValue + (100 -
        /// marginScale)*upperMargin. If the value of latest point is between
        /// upperBoundary and lowerBoundary, it should be treated as normal
        /// value. By adjusting marginScale value, anomaly status of latest
        /// point can be changed.</param>
        /// <param name="lowerMargin">Gets or sets lower margin of the latest
        /// point. LowerMargin is used
        /// to calculate lowerBoundary, which equals to expectedValue - (100 -
        /// marginScale)*lowerMargin.</param>
        /// <param name="isAnomaly">Gets or sets anomaly status of the latest
        /// point, true means the
        /// latest point is an anomaly either in negative direction or positive
        /// direction.</param>
        /// <param name="isNegativeAnomaly">Gets or sets anomaly status in
        /// negative direction of the latest
        /// point. True means the latest point is an anomaly and its real value
        /// is smaller than the expected one.</param>
        /// <param name="isPositiveAnomaly">Gets or sets anomaly status in
        /// positive direction of the latest
        /// point. True means the latest point is an anomaly and its real value
        /// is larger than the expected one.</param>
        public LastDetectResponse(int? period = default(int?), int? suggestedWindow = default(int?), double? expectedValue = default(double?), double? upperMargin = default(double?), double? lowerMargin = default(double?), bool? isAnomaly = default(bool?), bool? isNegativeAnomaly = default(bool?), bool? isPositiveAnomaly = default(bool?))
        {
            Period = period;
            SuggestedWindow = suggestedWindow;
            ExpectedValue = expectedValue;
            UpperMargin = upperMargin;
            LowerMargin = lowerMargin;
            IsAnomaly = isAnomaly;
            IsNegativeAnomaly = isNegativeAnomaly;
            IsPositiveAnomaly = isPositiveAnomaly;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets frequency extracted from the series, zero means no
        /// recurrent pattern has been found.
        /// </summary>
        [JsonProperty(PropertyName = "Period")]
        public int? Period { get; set; }

        /// <summary>
        /// Gets or sets suggested input series points needed for detecting the
        /// latest point.
        /// </summary>
        [JsonProperty(PropertyName = "SuggestedWindow")]
        public int? SuggestedWindow { get; set; }

        /// <summary>
        /// Gets or sets expected value of the latest point.
        /// </summary>
        [JsonProperty(PropertyName = "ExpectedValue")]
        public double? ExpectedValue { get; set; }

        /// <summary>
        /// Gets or sets upper margin of the latest point. UpperMargin is used
        /// to calculate upperBoundary, which equals to expectedValue + (100 -
        /// marginScale)*upperMargin. If the value of latest point is between
        /// upperBoundary and lowerBoundary, it should be treated as normal
        /// value. By adjusting marginScale value, anomaly status of latest
        /// point can be changed.
        /// </summary>
        [JsonProperty(PropertyName = "UpperMargin")]
        public double? UpperMargin { get; set; }

        /// <summary>
        /// Gets or sets lower margin of the latest point. LowerMargin is used
        /// to calculate lowerBoundary, which equals to expectedValue - (100 -
        /// marginScale)*lowerMargin.
        /// </summary>
        [JsonProperty(PropertyName = "LowerMargin")]
        public double? LowerMargin { get; set; }

        /// <summary>
        /// Gets or sets anomaly status of the latest point, true means the
        /// latest point is an anomaly either in negative direction or positive
        /// direction.
        /// </summary>
        [JsonProperty(PropertyName = "IsAnomaly")]
        public bool? IsAnomaly { get; set; }

        /// <summary>
        /// Gets or sets anomaly status in negative direction of the latest
        /// point. True means the latest point is an anomaly and its real value
        /// is smaller than the expected one.
        /// </summary>
        [JsonProperty(PropertyName = "IsNegativeAnomaly")]
        public bool? IsNegativeAnomaly { get; set; }

        /// <summary>
        /// Gets or sets anomaly status in positive direction of the latest
        /// point. True means the latest point is an anomaly and its real value
        /// is larger than the expected one.
        /// </summary>
        [JsonProperty(PropertyName = "IsPositiveAnomaly")]
        public bool? IsPositiveAnomaly { get; set; }

    }
}
